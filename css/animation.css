.drop {
    background: rgba(255, 255, 245, 1);
    border: 4px solid rgba(255, 245, 235, 1);
    border-radius: 100%;
    box-shadow: inset -0.1em 0 2em 0.5em rgba(255, 255, 255, 0.5),
        inset -0.1em 0 0.5em 0 rgba(0, 0, 0, 0.8);
    position: relative;
    margin: 0 auto;
    width: 10em;
    height: 15em;
    overflow: hidden;
}
.drop:before,
.drop:after {
    content: "";
    display: block;
    position: absolute;
}
/* Капля */
.drop:before {
    background: rgba(167, 217, 234, 1);
    border-radius: 100%;
    /* Начало капели */
    box-shadow: 0 0 0 0.1em rgba(167, 217, 234, 0.8),
        0 0 0 0.15em rgba(167, 217, 234, 0.8),
        0 0 0 0.2em rgba(167, 227, 234, 0.8),
        0 0 0 0.25em rgba(167, 227, 234, 0.8),
        0 0 0 0.3em rgba(167, 227, 234, 0.8),
        0 0 0 0.35em rgba(167, 227, 234, 0.8),
        0 0 0 0.4em rgba(167, 227, 234, 0.8),
        0 0 0 0.45em rgba(167, 227, 234, 0.8),
        0 0 0 0.5em rgba(167, 227, 234, 0.8);
    top: 0%;
    left: 50%;
    /*Ширина "width" и высота "height" деления должны быть меньше общего размера "box-shadow". Так мы сможем контролировать различные типы размеров. */
    width: 0.2em;
    height: 0.2em;
    animation: fall 3.5s cubic-bezier(0.5, 0, 1, 0.5) infinite;
}
/* Поверхность */
.drop:after {
    background: rgb(52, 152, 219);
    background: linear-gradient(rgba(52, 255, 255, 1) 0%, rgba(52, 152, 219, 1) 10%, rgba(152, 252, 219, 1) 100%);
    border-radius: 100% 0 50% 0;
    left: 0;
    bottom: 0;
    width: inherit;
    height: 3em;
    opacity: 0.7;
    animation: surface 3s linear infinite;
}
/* Анимация капели */
@keyframes fall {
    /* Форма капли */
    5%,
    15% {
        box-shadow: 0 -1.4em 0 0.1em rgba(167, 217, 234, 1),
            0 -0.8em 0 0.15em rgba(167, 217, 234, 1),
            0 -0.3em 0 0.2em rgba(167, 217, 234, 1),
            0 -0.1em 0 0.25em rgba(167, 217, 234, 1),
            0 0 0 0.3em rgba(167, 217, 234, 1),
            0 0.2em 0 0.35em rgba(167, 217, 234, 1),
            0 0.4em 0 0.4em rgba(167, 217, 234, 1),
            0 0.6em 0 0.45em rgba(167, 217, 234, 1),
            0 0.8em 0 0.5em rgba(167, 217, 234, 1);
    }
    /* Падение капли */
    16% {
        top: 80%;
    }
    /* Контакт с поверхностью */
    18% {
        top: 80%;
        box-shadow: 1em -8em 0 0.2em rgba(177, 227, 234, 1),
            -2.2em -3.8em 0 0.1em rgba(177, 227, 234, 1),
            3em -2.85em 0 0.3em rgba(177, 227, 234, 1),
            -3.5em -4em 0 0.2em rgba(177, 227, 234, 1),
            0 0 0 0.3em rgba(177, 227, 234, 1),
            2em -2em 0 0.2em rgba(177, 227, 234, 1),
            -0.3em -3em 0 0.2em rgba(177, 227, 234, 1),
            0.5em -5em 0 0.35em rgba(177, 227, 234, 1),
            -3em -1em 0 0.3em rgba(177, 227, 234, 1);
    }
    /* Брызги */
    30% {
        top: 90%;
        box-shadow: 1.5em 0 0 0.2em rgba(252, 252, 255, 0.1),
            -2em 0 0 0.15em rgba(252, 252, 255, 0.1),
            3em 0 0 0.2em rgba(252, 252, 255, 0.1),
            -2em 0 0 0.25em rgba(252, 252, 255, 0.1),
            0 0 0 0.2em rgba(252, 252, 255, 0.1),
            2.35em 0 0 0.3em rgba(252, 252, 255, 0.1),
            -0.5em 0 0 0.2em rgba(252, 252, 255, 0.1),
            1em 0 0 0.3em rgba(252, 252, 255, 0.1),
            -4em 0 0 0.4em rgba(252, 252, 255, 0.1);
    }
    /* Скрывание */
    40%,
    100% {
        top: 95%;
        background: rgb(255, 255, 255);
        box-shadow: 1.8em 0.5em 0 0.2em rgba(255, 255, 255, 0),
            -3em 0.5em 0 0.1em rgba(255, 255, 255, 0),
            4em 0.5em 0 0.1em rgba(255, 255, 255, 0),
            -3.5em 0.5em 0 0.1em rgba(255, 255, 255, 0),
            0 0 0 0.3em rgba(255, 255, 215, 0),
            2.45em 0.5em 0 0.1em rgba(255, 255, 255, 0),
            -0.8em 0.5em 0 0.2em rgba(255, 255, 255, 0),
            1.5em 0.5em 0 0.3em rgba(255, 255, 255, 0),
            -4.5em 0.5em 0 0.2em rgba(255, 255, 255, 0);
    }
}
/* Анимация водной поверхности */
@keyframes surface {
    50% {
        border-radius: 0 75% 0 75%;
        opacity: 0.5;
        height: 3.5em;
    }
}

/*  */
.circle {
    background: rgb(0, 0, 0);
    border-radius: 100%;
    cursor: pointer;
    position: relative;
    margin: 0 auto;
    width: 5em;
    height: 5em;
    overflow: hidden;
    transform: translateZ(0);
}

.circle h1 {
    margin-top: 50px;
    color: rgb(0, 0, 0);
    font-family: 'Lato', sans-serif;
    font-weight: 900;
    font-size: 1.6em;
    line-height: 8.2em;
    text-align: center;
    text-transform: uppercase;
    -webkit-font-smoothing: antialiased;
    user-select: none;
    transition: color 0.8s ease-in-out;
    position: relative;
}

.circle:before,
.circle:after {
    /* border-radius: 100%; */
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    height: inherit;
    box-shadow: inset 10.6em 0 0 rgb(255, 255, 255),
        inset 0 10.6em 0 rgb(255, 255, 255),
        inset -10.6em 0 0 rgb(255, 255, 255),
        inset 0 -10.6em 0 rgb(255, 255, 255);
    transition: box-shadow 0.75s;
}

/* Мы вращаем псевдоэлемент :after, чтобы его край пришелся на угол, то же самое можно было бы сделать с помощью тени блока box-shadow. */

.circle:after {
    transform: rotate(45deg);
}

/* Применение "pseudo-class + pseudo-element" не создает никаких проблем:) */

.circle:hover:before,
.circle:hover:after {
    box-shadow: inset 0.86em 0 0 rgba(255, 0, 0, 0.5),
        inset 0 0.86em 0 rgba(252, 150, 0, 0.5),
        inset -0.86em 0 0 rgba(0, 255, 0, 0.5),
        inset 0 -0.86em 0 rgba(0, 150, 255, 0.5);
}

.circle:hover>h1 {
    color: rgb(0, 0, 0);
}

/*  */
/* анимация для секции 2 */
.loading {
    background: rgba(0, 50, 250, 0);
    position: relative;
    margin: 5em auto 0 auto;
    width: 3em;
    height: 3em;
    animation-name: rotate;
}
.loading,
.loading:before,
.loading:after {
    border-radius: 100%;
    animation-duration: 3s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in;
}
.loading:before,
.loading:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    height: inherit;
}
.loading:before {
    background: rgba(200, 250, 100, 0);
    animation-name: ring;
}
.loading:after {
    background: rgba(250, 0, 200, 0);
    animation-name: ring2;
}
@keyframes rotate {
    0% {
        transform: rotateZ(0deg) scaleX(0.1) scaleY(0.1) translateZ(0);
        box-shadow: inset 0.8em 0 0 rgba(255, 0, 212),
            inset 0 0.8em 0 rgba(255, 40, 219),
            inset -0.8em 0 0 rgba(255, 81, 226),
            inset 0 -0.8em 0 rgba(255, 127, 234);
    }
    /* Скрыто */
    85%,
    100% {
        /* 360c х 10 */
        transform: rotateZ(3600deg) scaleX(2.01) scaleY(2) translateZ(0);
        box-shadow: inset 0 0 0 rgba(255, 0, 0),
            inset 0 0 0 rgb(238, 255, 0),
            inset 0 0 0 rgb(60, 255, 0),
            inset 0 0 0 rgb(0, 183, 255);
    }
}
 @keyframes ring {
    0% {
        transform: scaleX(0.1) scaleY(0.5);
        box-shadow: inset 0.8em 0 0 rgba(255, 0, 212),
            inset 0 0.8em 0 rgba(255, 40, 219),
            inset -0.8em 0 0 rgba(255, 81, 226),
            inset 0 -0.8em 0 rgba(255, 127, 234);
    }
    /* Скрыто */
    75%,
    100% {
        transform: scaleX(2) scaleY(2.1);
        box-shadow: inset 0 0 0 rgb(255, 0, 0),
            inset 0 0 0 rgb(255, 251, 0),
            inset 0 0 0 rgb(43, 255, 0),
            inset 0 0 0 rgb(0, 183, 255);
    }
}
@keyframes ring2 {
    0% {
        transform: scaleX(0.5) scaleY(0.1);
        box-shadow: inset 0.8em 0 0 rgba(255, 0, 212),
            inset 0 0.8em 0 rgba(255, 40, 219),
            inset -0.8em 0 0 rgba(255, 81, 226),
            inset 0 -0.8em 0 rgba(255, 127, 234);
    }
    /* Скрыто */
    65%,
    100% {
        transform: scaleX(2) scaleY(2.1);
        box-shadow: inset 0 0 0 rgb(255, 0, 234),
            inset 0 0 0 rgb(255, 40, 219),
            inset 0 0 0 rgb(255, 81, 226),
            inset 0 0 0 rgb(255, 81, 240);
    }
} 





.circle {
    background: rgb(0, 0, 0);
    border-radius: 100%;
    cursor: pointer;
    position: relative;
    margin: 0 auto;
    width: 5em;
    height: 5em;
    overflow: hidden;
    transform: translateZ(0);
}
.circle h1 {
    margin-top: 50px;
    color: rgb(0, 0, 0);
    font-family: 'Lato', sans-serif;
    font-weight: 900;
    font-size: 1.6em;
    line-height: 8.2em;
    text-align: center;
    text-transform: uppercase;
    -webkit-font-smoothing: antialiased;
    user-select: none;
    transition: color 0.8s ease-in-out;
    position: relative;
}
.circle:before,
.circle:after {
    border-radius: 100%;
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    height: inherit;
    box-shadow: inset 10.6em 0 0 rgba(255, 0, 212),
        inset 0 10.6em 0 rgba(255, 40, 219),
        inset -10.6em 0 0 rgba(255, 81, 226),
        inset 0 -10.6em 0 rgba(255, 127, 234);
    transition: box-shadow 0.75s;
}

/* Мы вращаем псевдоэлемент :after, чтобы его край пришелся на угол, то же самое можно было бы сделать с помощью тени блока box-shadow. */

   .circle:after {
    transform: rotate(45deg);
} */

/* Применение "pseudo-class + pseudo-element" не создает никаких проблем:) */

   .circle:hover:before,
.circle:hover:after {
    box-shadow: inset 0.86em 0 0 rgb(255, 0, 212),
        inset 0 0.86em 0 rgb(255, 40, 219),
        inset -0.86em 0 0 rgb(255, 81, 226),
        inset 0 -0.86em 0 rgb(255, 127, 234);
}
.circle:hover>h1 {
    color: rgb(0, 0, 0);
} 